# CodeRabbit configuration for Luxury E-commerce Project
version: 2

# Focus areas for e-commerce applications
focus_areas:
  - security
  - performance
  - accessibility
  - code_quality
  - react_best_practices
  - payment_processing
  - data_protection
  - api_security
  - error_handling
  - user_experience

# Language-specific settings
languages:
  javascript:
    enabled: true
    rules:
      - react_hooks
      - security
      - performance
      - error_handling
      - async_await
      - es6_features
  typescript:
    enabled: true
    rules:
      - type_safety
      - react_hooks
      - security
      - strict_types
      - interface_design

# E-commerce specific checks
custom_checks:
  - payment_security
  - user_data_protection
  - form_validation
  - api_security
  - stripe_integration
  - jwt_security
  - password_security
  - sql_injection_prevention
  - xss_prevention
  - csrf_protection
  - rate_limiting
  - input_sanitization
  - file_upload_security
  - environment_variables
  - error_logging
  - database_security

# Security patterns to check
security_patterns:
  - jwt_implementation
  - password_hashing
  - input_validation
  - sql_parameterization
  - cors_configuration
  - helmet_usage
  - rate_limiting
  - environment_secrets
  - file_upload_validation
  - payment_data_handling

# Performance patterns to check
performance_patterns:
  - lazy_loading
  - code_splitting
  - image_optimization
  - caching_strategies
  - database_query_optimization
  - bundle_size_optimization
  - memory_leaks
  - unnecessary_re_renders

# File patterns to include/exclude
include_patterns:
  - "client/src/**/*.js"
  - "client/src/**/*.jsx"
  - "client/src/**/*.ts"
  - "client/src/**/*.tsx"
  - "server/**/*.js"
  - "server/**/*.json"
  - "*.json"
  - "*.yaml"
  - "*.yml"
  - "*.md"

exclude_patterns:
  - "node_modules/**"
  - "build/**"
  - "dist/**"
  - "*.min.js"
  - "client/build/**"
  - "uploads/**"
  - "*.log"
  - "coverage/**"
  - ".git/**"

# Review settings
review_settings:
  max_comments_per_file: 15
  min_confidence: 0.6
  include_suggestions: true
  include_security_checks: true
  include_performance_suggestions: true
  include_accessibility_checks: true
  include_best_practices: true
  include_documentation_suggestions: true

# Specific file type configurations
file_configurations:
  "**/auth*.js":
    focus_areas:
      - security
      - jwt_implementation
      - password_security
      - input_validation
  "**/stripe*.js":
    focus_areas:
      - payment_security
      - stripe_integration
      - error_handling
      - webhook_security
  "**/api*.js":
    focus_areas:
      - api_security
      - input_validation
      - error_handling
      - rate_limiting
  "**/context*.js":
    focus_areas:
      - react_best_practices
      - state_management
      - performance
      - error_handling
  "**/components/**/*.js":
    focus_areas:
      - react_best_practices
      - accessibility
      - performance
      - user_experience
  "**/middleware/*.js":
    focus_areas:
      - security
      - error_handling
      - input_validation
      - authentication

# Comment templates for different issue types
comment_templates:
  security:
    title: "ðŸ”’ Security Issue"
    template: |
      **Security Concern**: {issue}
      
      **Risk Level**: {severity}
      
      **Recommendation**: {suggestion}
      
      **Additional Info**: {context}
  
  performance:
    title: "âš¡ Performance Issue"
    template: |
      **Performance Concern**: {issue}
      
      **Impact**: {impact}
      
      **Optimization**: {suggestion}
  
  accessibility:
    title: "â™¿ Accessibility Issue"
    template: |
      **Accessibility Concern**: {issue}
      
      **WCAG Guideline**: {guideline}
      
      **Fix**: {suggestion}

# Custom rules for e-commerce specific patterns
custom_rules:
  - name: "Payment Data Handling"
    pattern: "stripe|payment|card|billing"
    checks:
      - "No sensitive payment data in logs"
      - "Proper error handling for payment failures"
      - "Webhook signature verification"
  
  - name: "User Data Protection"
    pattern: "user|profile|auth|password"
    checks:
      - "Password hashing with bcrypt"
      - "JWT token security"
      - "Input validation and sanitization"
      - "No sensitive data in client-side code"
  
  - name: "API Security"
    pattern: "api|route|controller|middleware"
    checks:
      - "Proper authentication middleware"
      - "Input validation"
      - "Rate limiting implementation"
      - "CORS configuration"
      - "Error handling without information leakage"

# Integration settings
integrations:
  github:
    auto_assign: true
    require_approval: true
    auto_merge: false
  slack:
    notify_on_high_severity: true
    notify_on_security_issues: true

